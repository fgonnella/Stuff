#!/usr/bin/perl
use Term::ANSIColor qw(:constants);
$Term::ANSIColor::AUTORESET = 1;
use File::Copy;

open CONF, "/etc/organise.conf";
@lines = <CONF>;
close CONF;
$series_path = "/home/pi/Seagate/Series";

$i=0;
for $line (@lines) {
    $i++;
    if  (($line =~ /^\#.*$/) or ($line =~ /^\s*$/)) {
	#comment, spaces or empty line
    } elsif ($line =~ /^\s*(.+?)\s*\=\s*(.+?)$/) {
	$path{"\L$1"} = $2;
	#print "key: \L$1, valore $2\n";
    } else {
	print BOLD RED "Error in configuration file line $i: \"$line\"\n";
	die; 
    }  
}

if ($#ARGV > -1) { 
    if (-e  $ARGV[0]) {
	$dir = $ARGV[0];
    } else {
	die "$ARGV[0] does not exist.\n";
    } 
} else {
    $dir = ".";
}

opendir DIR, $dir;
@filez = readdir DIR;
close DIR;

print "\n", "Let's oganize $dir ...\n";
chdir $dir;

for my $fil(@filez) {
    if ((-d $fil ) and ($fil ne ".") and ($fil ne "..")) {
	print "Entering subdirectory $fil...\n";
	chdir $fil;
	&organize(".");
	chdir "..";
    }
}

chdir $dir;
&organize(".");

print "Done! Beware, take care!\n";

sub organize {
    my $folder = $_[0];
    opendir DIR, $folder;
    @files = readdir DIR;
    close DIR;

#    print YELLOW "Organize $folder\n";
    for my $file(@files) {
#    print YELLOW "$file \n";
	if ((-f $file) and ($file =~ /^(.+)\.(.+)$/)) {
	    ($name, $ext) = ($1, $2);
	    $series = 0;

	    if ($ext eq "mkv" or $ext eq "avi" or $ext eq "mp4" or $ext eq "srt" ) {
		if (($name =~ /(.+)\b(\d+)[Xx](\d+)\b\W*(.*)/)  or ($name =~ /(.+)\b[sS](\d+)[eE](\d+)\b\W*(.*)/)){
		    
		    ($show,$season,$episode,$title) = ($1,$2,$3,$4); 
		        #print "show: $show S $season E $episode title: $title\n"; 
		        
		    @Show = split(/\W+/, "\L$show");
		    for my $str(@Show) {
			$str = "\u$str";
		    }
		    $show = join(".", @Show);
		    print "\n";
		    @Title = split(/\W+/, $title);
		    for my $str(@Title) {
			$str = "\u$str";
		    }
		    $title =  join(".", @Title);
		    $season = sprintf("%02d",$season);
		    $episode = sprintf("%02d",$episode);
		    if (not -e "$series_path/$show/") {
			print "Creating directory $series_path/$show/...\n";
			mkdir "$series_path/$show/" or die $!;
		    }
		    if (not -e "$series_path/$show/Season$season") {
			print "Creating directory $series_path/$show/Season$season...\n";
			mkdir "$series_path/$show/Season$season" or die $!;
		    }
		        
		    $newpath = "$series_path/$show/Season$season";
		    if ($title ne "") {$title="-$title";}  
		    $newfile = "$newpath/$show-S${season}E$episode$title.$ext";
		    print "Creating $newpath...\n";
		    mkdir $newpath;
		    print BOLD "Moving: $folder/$file", " -> ", $newfile, "\n";
		    move( "$folder/$file",$newfile) or die "Move failed: $!";

		    if (($ext ne "srt") &&  (-e "/usr/local/bin/addic7ed")) {
			system("cd $newpath; /usr/local/bin/addic7ed -bb -l english $show-S${season}E$episode$title.$ext");
		    }
		    $series = 1;
		} 
	    } 
	    
	    if ((-e $path{$ext}) and ($series == 0)) {
		print BOLD "Moving: $folder/$file", " -> ", $path{$ext}, "\n";
		move ("$folder/$file",  $path{$ext}) or die "Move failed: $!";
	    }
	}
	    
	    

	
    
    }
    
}
